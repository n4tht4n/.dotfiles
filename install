#!/bin/bash

BASEDIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"

echo "Bootstrapping my .dotfiles from '$BASEDIR'..."

### preparation ###
ln -sf "$BASEDIR/.zshenv" "$HOME"
source "$HOME/.zshenv"

#######################################################################################################################
# SETTING UP CONFIGS
#######################################################################################################################

### zsh ###
mkdir -p "$ZDOTDIR"
ln -sf "$BASEDIR/zsh/.zshenv" "$ZDOTDIR"
ln -sf "$BASEDIR/zsh/.zshrc" "$ZDOTDIR"
ln -sf "$BASEDIR/zsh/.p10k.zsh" "$ZDOTDIR"
ln -sf "$BASEDIR/zsh/aliases" "$ZDOTDIR"
ln -sf "$BASEDIR/zsh/my_scripts.zsh" "$ZDOTDIR"
rm -rf "$HOME/.config/zsh/external"
#ln -sf "$BASEDIR/zsh/external" "$ZDOTDIR"

### git ###
mkdir -p "$XDG_CONFIG_HOME/git"
ln -sf "$BASEDIR/git/config" "$XDG_CONFIG_HOME/git"
ln -sf "$BASEDIR/git/ignore" "$XDG_CONFIG_HOME/git"

### lazygit ###
mkdir -p "$XDG_CONFIG_HOME/lazygit"
ln -sf "$BASEDIR/lazygit/config.yml" "$XDG_CONFIG_HOME/lazygit"

### kitty ###
mkdir -p "$XDG_CONFIG_HOME/kitty"
ln -sf "$BASEDIR/kitty/kitty.conf" "$XDG_CONFIG_HOME/kitty"

### tmux ###
mkdir -p "$XDG_CONFIG_HOME/tmux"
ln -sf "$BASEDIR/tmux/tmux.conf" "$XDG_CONFIG_HOME/tmux"
mkdir -p "$XDG_CONFIG_HOME/tmuxp"
ln -sf "$BASEDIR/tmuxp/dotfiles.yml" "$XDG_CONFIG_HOME/tmuxp"

### neovim ###
mkdir -p "$XDG_CONFIG_HOME/nvim/undo"
ln -sf "$BASEDIR/nvim/init.lua" "$XDG_CONFIG_HOME/nvim"
ln -sf "$BASEDIR/nvim/lua" "$XDG_CONFIG_HOME/nvim"

### timewarrior ###
mkdir -p "$XDG_CONFIG_HOME/timewarrior"
ln -sf "$BASEDIR/timew/timewarrior.cfg" "$XDG_CONFIG_HOME/timewarrior"
ln -sf "$BASEDIR/timew/themes" "$XDG_CONFIG_HOME/timewarrior" 

### taskwarrior ###
mkdir -p "$XDG_CONFIG_HOME/task/hooks"
mkdir -p "$XDG_DATA_HOME/task"
ln -sf "$BASEDIR/task/taskrc" "$XDG_CONFIG_HOME/task"

#######################################################################################################################
# OH-MY-ZSH
#######################################################################################################################

echo -e "\n\tSetting up oh-my-zsh... \n"
sleep 1

if ! [ -f $ZSH/oh-my-zsh.sh ]; then
  echo -e "\t\toh-my-zsh not yet installed, installing it NOW!\n"
  sh -c "$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)" "" --unattended
else
  echo -e "\t\toh-my-zsh is already installed, skipping...\n"
fi

# custom theme
if ! [ -d $ZSH/custom/themes/powerlevel10k ]; then
  echo -e "\t\talso installing powerlevel10k theme!\n"
  git clone --depth=1 https://github.com/romkatv/powerlevel10k.git ${ZSH_CUSTOM:-$ZSH/custom}/themes/powerlevel10k
fi

# custom plugins
if ! [ -d $ZSH/custom/plugins/zsh-autosuggestions ]; then
  echo -e "\t\talso installing zsh-autosuggestions plugin!\n"
  git clone https://github.com/zsh-users/zsh-autosuggestions ${ZSH_CUSTOM:-$ZSH/custom}/plugins/zsh-autosuggestions
fi

if ! [ -d $ZSH/custom/plugins/zsh-syntax-highlighting ]; then
  echo -e "\t\talso installing zsh-syntax-highlighting plugin!\n"
  git clone https://github.com/zsh-users/zsh-syntax-highlighting.git ${ZSH_CUSTOM:-$ZSH/custom}/plugins/zsh-syntax-highlighting
fi

#######################################################################################################################
# BREWING üçª
#######################################################################################################################

echo -e "\n\tBrewing... üçª\n"
sleep 1

### Installing brew? ###
if ! [ -x "$(command -v brew)" ]; then
  /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
fi

### Installing apps via brew ###
brew bundle

echo -e "\n\tBootstrapping DONE, please RESTART YOUR TERMINAL and enjoy coding üöÄ\n"

